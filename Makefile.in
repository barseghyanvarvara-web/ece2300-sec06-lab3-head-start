#=========================================================================
# Makefile for ECE 2300
#=========================================================================
# Author : Christopher Batten (Cornell)
# Date   : September 5, 2025

#-------------------------------------------------------------------------
# Basic setup
#-------------------------------------------------------------------------

# Remove all default implicit rules since they can cause subtle bugs
# and they just make things run slower
.SUFFIXES:
% : %,v
% : RCS/%,v
% : RCS/%
% : s.%
% : SCCS/s.%

# Default is to build the prereqs of the all target (defined at bottom)
default : all
.PHONY : default

#-------------------------------------------------------------------------
# Subprojects
#-------------------------------------------------------------------------

subprojects := ece2300 lab2 lab3

#-------------------------------------------------------------------------
# Directories
#-------------------------------------------------------------------------

top_dir     := @srcdir@
scripts_dir := $(top_dir)/scripts

#-------------------------------------------------------------------------
# Programs
#-------------------------------------------------------------------------

VMKDEPS          := $(scripts_dir)/mk-verilog-deps
WARN2ERR         := $(scripts_dir)/warnings2errors
SUMMARIZE_TESTS  := $(scripts_dir)/summarize-tests

VERILATOR_FLAGS  := --quiet --timing -Wall \
                      -Wno-DECLFILENAME -Wno-UNOPTFLAT -Wno-VARHIDDEN
VERILATOR_LINT   := @VERILATOR@ --lint-only $(VERILATOR_FLAGS)

ECE2300_LINT     := $(scripts_dir)/ece2300-lint

IVERILOG_FLAGS   := -Wall -Winfloop -Wno-timescale -g2012
IVERILOG_COMPILE := $(WARN2ERR) @IVERILOG@ $(IVERILOG_FLAGS)

#-------------------------------------------------------------------------
# check_part Helper Template
#-------------------------------------------------------------------------

define check_part
$(1)_test_logs = $$(patsubst %.v, %.log, $$($(1)_tests))

check-$(subst _,-,$(1)) : $$($(1)_test_logs)
	$(scripts_dir)/summarize-tests $$($(1)_test_logs)

check-$(subst _,-,$(1))-verbose : $$($(1)_test_logs)
	$(scripts_dir)/summarize-tests --verbose $(SUMMARIZE_TESTS_FLAGS) $$($(1)_test_logs)

.PHONY : check-$(subst _,-,$(1))

endef

#-------------------------------------------------------------------------
# Setup Subprojects
#-------------------------------------------------------------------------

include $(foreach s,$(subprojects),$(top_dir)/$(s)/$(s).mk)

srcs  := $(foreach s,$(subprojects),$($(s)_srcs))
tests := $(foreach s,$(subprojects),$($(s)_tests))
sims  := $(foreach s,$(subprojects),$($(s)_sims))

VPATH := $(foreach s,$(subprojects),$(top_dir)/$(s))
VPATH += $(foreach s,$(subprojects),$(top_dir)/$(s)/test)
VPATH += $(foreach s,$(subprojects),$(top_dir)/$(s)/sim)

#-------------------------------------------------------------------------
# Tests
#-------------------------------------------------------------------------

test_deps := $(patsubst %.v, %.d,   $(tests))
test_exes := $(patsubst %.v, %,     $(tests))
test_logs := $(patsubst %.v, %.log, $(tests))

$(test_deps) : %.d : %.v
	$(VMKDEPS) -I $(top_dir) $* $<

$(test_exes) : % : %.v
	$(VERILATOR_LINT) -I$(top_dir) --top-module Top $<
	$(ECE2300_LINT) -I $(top_dir) $<
	$(IVERILOG_COMPILE) -I $(top_dir) -s Top -o $@ $<

$(test_logs) : %.log : %
	./$< > $@

check : $(test_logs)
	$(SUMMARIZE_TESTS) $(SUMMARIZE_TESTS_FLAGS) $(test_logs)

check-verbose : $(test_logs)
	$(SUMMARIZE_TESTS) --verbose $(test_logs)

.PHONY: check

deps += $(test_deps)
exes += $(test_exes)
logs += $(test_logs)
junk += $(test_deps) $(test_exes) $(test_logs)

#-------------------------------------------------------------------------
# Sims
#-------------------------------------------------------------------------

sim_deps := $(patsubst %.v, %.d, $(sims))
sim_exes := $(patsubst %.v, %,   $(sims))

$(sim_deps) : %.d : %.v
	$(VMKDEPS) -I $(top_dir) $* $<

$(sim_exes) : % : %.v
	$(VERILATOR_LINT) -I$(top_dir) --top-module Top $<
	$(IVERILOG_COMPILE) -I $(top_dir) -s Top -o $@ $<

deps += $(sim_deps)
exes += $(sim_exes)
junk += $(sim_deps) $(sim_exes)

#-------------------------------------------------------------------------
# Autodependency files
#-------------------------------------------------------------------------

-include $(deps)

deps : $(deps)

.PHONY : deps

#-------------------------------------------------------------------------
# configure information
#-------------------------------------------------------------------------

configure_prereq = $(top_dir)/configure.ac

$(top_dir)/configure : $(configure_prereq)
	cd $(top_dir) && autoconf

config.status : $(top_dir)/configure
	./config.status --recheck

Makefile : $(top_dir)/Makefile.in config.status
	./config.status

dist_junk += config.status Makefile config.log

#-------------------------------------------------------------------------
# Default
#-------------------------------------------------------------------------

all : $(sim_exes)

.PHONY : all

#-------------------------------------------------------------------------
# Makefile debugging
#-------------------------------------------------------------------------
# This handy rule will display the contents of any make variable by
# using the target debug-<varname>. So for example, make debug-junk will
# display the contents of the junk variable.

debug-% :
	@echo $* = $($*)

#-------------------------------------------------------------------------
# Clean up junk
#-------------------------------------------------------------------------

clean :
	rm -rf *~ \#* *.vcd $(junk)

distclean :
	rm -rf *~ \#* *.vcd $(junk) $(dist_junk)

.PHONY : clean distclean

